{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInAnonymously, signInWithCustomToken, onAuthStateChanged, signOut,\n// <-- Added for signOutUser\nsignInWithEmailAndPassword // <-- Added for signInWithEmail\n} from 'firebase/auth';\nimport { getFirestore, doc, addDoc, setDoc, deleteDoc, onSnapshot, collection, query, serverTimestamp, orderBy // Temporarily required by getPortfolioQuery but needs care\n} from 'firebase/firestore';\n\n// Environment variables are not set in local development, so we use a hardcoded config.\n// !! IMPORTANT !! You MUST replace these placeholder values with your actual Firebase project credentials\n// from your Firebase console for the app to connect.\nconst LOCAL_DEV_FIREBASE_CONFIG = {\n  apiKey: \"AIzaSyBS2NC2rkH6stMH4DEUdT105yUNKqTTRss\",\n  authDomain: \"first-project-a3e5c.firebaseapp.com\",\n  projectId: \"first-project-a3e5c\",\n  storageBucket: \"first-project-a3e5c.firebasestorage.app\",\n  messagingSenderId: \"40010184893\",\n  appId: \"1:40010184893:web:ab151405bcb065b8badfd4\",\n  measurementId: \"G-2PWV3BQ0C0\"\n};\n\n// Use environment variables for Canvas or local config otherwise\nconst firebaseConfig = typeof __firebase_config !== 'undefined' ? JSON.parse(__firebase_config) : LOCAL_DEV_FIREBASE_CONFIG;\n\n// Use App ID from Canvas or local placeholder\nconst appId = typeof __app_id !== 'undefined' ? __app_id : 'local-dev-app-id';\n\n// Use initial auth token from Canvas or null locally\nconst initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\n\n// Determine if the user is the secure Canvas admin\nexport const IS_ADMIN_USER = !!initialAuthToken;\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nexport const db = getFirestore(app);\nexport const auth = getAuth(app);\n\n// --- Authentication Functions ---\n\n/**\r\n * Attempts to sign in the user, preferring custom token if available, otherwise anonymous sign-in.\r\n */\nexport const signInUser = async () => {\n  try {\n    if (initialAuthToken) {\n      await signInWithCustomToken(auth, initialAuthToken);\n    } else {\n      await signInAnonymously(auth);\n    }\n  } catch (error) {\n    // Retry logic for transient network issues only\n    console.error(\"Error signing in to Firebase (retrying):\", error);\n  }\n};\n\n/**\r\n * Signs in user with provided email and password.\r\n */\nexport const signInWithEmail = async (email, password) => {\n  try {\n    await signInWithEmailAndPassword(auth, email, password);\n  } catch (error) {\n    // Rethrow the error for the component to display\n    throw error;\n  }\n};\n\n/**\r\n * Signs out the currently authenticated user.\r\n */\nexport const signOutUser = async () => {\n  try {\n    // Sign out the current user (admin)\n    await signOut(auth);\n    // Immediately sign in the public anonymous user after admin signs out\n    await signInAnonymously(auth);\n  } catch (error) {\n    console.error(\"Error signing out:\", error);\n  }\n};\n\n// Re-export Auth Listener\nexport { onAuthStateChanged };\n\n// --- Firestore Functions & Queries ---\n\n// Define the core collection path for public data\nexport const collectionRef = collectionName => collection(db, `artifacts/${appId}/public/data/${collectionName}`);\n\n/**\r\n * Gets the query object for portfolio items, ordered by creation time.\r\n */\nexport const getPortfolioQuery = () => {\n  // NOTE: orderBy can cause missing index errors. If that happens, remove orderBy\n  // and sort the data client-side in the App.jsx useEffect hook.\n  return query(collectionRef('portfolio_items'), orderBy('createdAt', 'desc'));\n};\n\n/**\r\n * Saves (creates or updates) a portfolio item.\r\n */\nexport const savePortfolioItem = async item => {\n  const data = {\n    title: item.title,\n    description: item.description,\n    videoUrl: item.videoUrl,\n    type: item.type,\n    // 'youtube' or 'drive'\n    isHero: item.isHero || false,\n    createdAt: item.createdAt || serverTimestamp(),\n    updatedAt: serverTimestamp()\n  };\n  try {\n    if (item.id) {\n      // Update existing document\n      const itemDoc = doc(collectionRef('portfolio_items'), item.id);\n      await setDoc(itemDoc, data, {\n        merge: true\n      });\n    } else {\n      // Create new document\n      await addDoc(collectionRef('portfolio_items'), data);\n    }\n  } catch (error) {\n    console.error(\"Error saving portfolio item:\", error);\n    throw error; // Propagate error for UI handling\n  }\n};\n\n/**\r\n * Deletes a portfolio item.\r\n */\nexport const deletePortfolioItem = async id => {\n  try {\n    const itemDoc = doc(collectionRef('portfolio_items'), id);\n    await deleteDoc(itemDoc);\n  } catch (error) {\n    console.error(\"Error deleting portfolio item:\", error);\n    throw error; // Propagate error for UI handling\n  }\n};\n\n// Export other necessary Firestore tools\nexport { onSnapshot, query, doc, collection, serverTimestamp };","map":{"version":3,"names":["initializeApp","getAuth","signInAnonymously","signInWithCustomToken","onAuthStateChanged","signOut","signInWithEmailAndPassword","getFirestore","doc","addDoc","setDoc","deleteDoc","onSnapshot","collection","query","serverTimestamp","orderBy","LOCAL_DEV_FIREBASE_CONFIG","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseConfig","__firebase_config","JSON","parse","__app_id","initialAuthToken","__initial_auth_token","IS_ADMIN_USER","app","db","auth","signInUser","error","console","signInWithEmail","email","password","signOutUser","collectionRef","collectionName","getPortfolioQuery","savePortfolioItem","item","data","title","description","videoUrl","type","isHero","createdAt","updatedAt","id","itemDoc","merge","deletePortfolioItem"],"sources":["D:/Projects/my-portfolio/src/firebase/utils.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\r\nimport { \r\n    getAuth, \r\n    signInAnonymously, \r\n    signInWithCustomToken, \r\n    onAuthStateChanged,\r\n    signOut, // <-- Added for signOutUser\r\n    signInWithEmailAndPassword // <-- Added for signInWithEmail\r\n} from 'firebase/auth';\r\nimport { \r\n    getFirestore, \r\n    doc, \r\n    addDoc, \r\n    setDoc, \r\n    deleteDoc, \r\n    onSnapshot, \r\n    collection, \r\n    query, \r\n    serverTimestamp,\r\n    orderBy // Temporarily required by getPortfolioQuery but needs care\r\n} from 'firebase/firestore';\r\n\r\n// Environment variables are not set in local development, so we use a hardcoded config.\r\n// !! IMPORTANT !! You MUST replace these placeholder values with your actual Firebase project credentials\r\n// from your Firebase console for the app to connect.\r\nconst LOCAL_DEV_FIREBASE_CONFIG = {\r\n    apiKey: \"AIzaSyBS2NC2rkH6stMH4DEUdT105yUNKqTTRss\",\r\n    authDomain: \"first-project-a3e5c.firebaseapp.com\",\r\n    projectId: \"first-project-a3e5c\",\r\n    storageBucket: \"first-project-a3e5c.firebasestorage.app\",\r\n    messagingSenderId: \"40010184893\",\r\n    appId: \"1:40010184893:web:ab151405bcb065b8badfd4\",\r\n    measurementId: \"G-2PWV3BQ0C0\"\r\n};\r\n\r\n// Use environment variables for Canvas or local config otherwise\r\nconst firebaseConfig = typeof __firebase_config !== 'undefined'\r\n    ? JSON.parse(__firebase_config)\r\n    : LOCAL_DEV_FIREBASE_CONFIG;\r\n\r\n// Use App ID from Canvas or local placeholder\r\nconst appId = typeof __app_id !== 'undefined' ? __app_id : 'local-dev-app-id';\r\n\r\n// Use initial auth token from Canvas or null locally\r\nconst initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\r\n\r\n// Determine if the user is the secure Canvas admin\r\nexport const IS_ADMIN_USER = !!initialAuthToken;\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nexport const db = getFirestore(app);\r\nexport const auth = getAuth(app);\r\n\r\n// --- Authentication Functions ---\r\n\r\n/**\r\n * Attempts to sign in the user, preferring custom token if available, otherwise anonymous sign-in.\r\n */\r\nexport const signInUser = async () => {\r\n    try {\r\n        if (initialAuthToken) {\r\n            await signInWithCustomToken(auth, initialAuthToken);\r\n        } else {\r\n            await signInAnonymously(auth);\r\n        }\r\n    } catch (error) {\r\n        // Retry logic for transient network issues only\r\n        console.error(\"Error signing in to Firebase (retrying):\", error);\r\n    }\r\n};\r\n\r\n/**\r\n * Signs in user with provided email and password.\r\n */\r\nexport const signInWithEmail = async (email, password) => {\r\n    try {\r\n        await signInWithEmailAndPassword(auth, email, password);\r\n    } catch (error) {\r\n        // Rethrow the error for the component to display\r\n        throw error;\r\n    }\r\n};\r\n\r\n/**\r\n * Signs out the currently authenticated user.\r\n */\r\nexport const signOutUser = async () => {\r\n    try {\r\n        // Sign out the current user (admin)\r\n        await signOut(auth);\r\n        // Immediately sign in the public anonymous user after admin signs out\r\n        await signInAnonymously(auth);\r\n    } catch (error) {\r\n        console.error(\"Error signing out:\", error);\r\n    }\r\n};\r\n\r\n// Re-export Auth Listener\r\nexport { onAuthStateChanged };\r\n\r\n// --- Firestore Functions & Queries ---\r\n\r\n// Define the core collection path for public data\r\nexport const collectionRef = (collectionName) => \r\n    collection(db, `artifacts/${appId}/public/data/${collectionName}`);\r\n\r\n/**\r\n * Gets the query object for portfolio items, ordered by creation time.\r\n */\r\nexport const getPortfolioQuery = () => {\r\n    // NOTE: orderBy can cause missing index errors. If that happens, remove orderBy\r\n    // and sort the data client-side in the App.jsx useEffect hook.\r\n    return query(\r\n        collectionRef('portfolio_items'), \r\n        orderBy('createdAt', 'desc')\r\n    );\r\n};\r\n\r\n/**\r\n * Saves (creates or updates) a portfolio item.\r\n */\r\nexport const savePortfolioItem = async (item) => {\r\n    const data = {\r\n        title: item.title,\r\n        description: item.description,\r\n        videoUrl: item.videoUrl,\r\n        type: item.type, // 'youtube' or 'drive'\r\n        isHero: item.isHero || false,\r\n        createdAt: item.createdAt || serverTimestamp(),\r\n        updatedAt: serverTimestamp(),\r\n    };\r\n\r\n    try {\r\n        if (item.id) {\r\n            // Update existing document\r\n            const itemDoc = doc(collectionRef('portfolio_items'), item.id);\r\n            await setDoc(itemDoc, data, { merge: true });\r\n        } else {\r\n            // Create new document\r\n            await addDoc(collectionRef('portfolio_items'), data);\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Error saving portfolio item:\", error);\r\n        throw error; // Propagate error for UI handling\r\n    }\r\n};\r\n\r\n/**\r\n * Deletes a portfolio item.\r\n */\r\nexport const deletePortfolioItem = async (id) => {\r\n    try {\r\n        const itemDoc = doc(collectionRef('portfolio_items'), id);\r\n        await deleteDoc(itemDoc);\r\n    } catch (error) {\r\n        console.error(\"Error deleting portfolio item:\", error);\r\n        throw error; // Propagate error for UI handling\r\n    }\r\n};\r\n\r\n// Export other necessary Firestore tools\r\nexport { onSnapshot, query, doc, collection, serverTimestamp };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}