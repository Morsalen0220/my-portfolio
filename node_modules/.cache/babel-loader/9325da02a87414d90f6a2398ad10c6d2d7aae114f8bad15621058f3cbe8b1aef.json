{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\my-portfolio\\\\src\\\\components\\\\VideoEmbed.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoEmbed = ({\n  item\n}) => {\n  const {\n    videoUrl,\n    type,\n    title\n  } = item || {};\n  if (!videoUrl || !videoUrl.includes('https://')) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full h-full bg-black flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-400 text-xs p-2\",\n        children: \"Video URL error.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this);\n  }\n  let embedUrl = '';\n  if (type === 'youtube') {\n    let videoId = '';\n    try {\n      if (videoUrl.includes('youtu.be/')) {\n        videoId = videoUrl.split('youtu.be/')[1].split('?')[0];\n      } else if (videoUrl.includes('watch?v=')) {\n        videoId = videoUrl.split('watch?v=')[1].split('&')[0];\n      }\n      if (videoId) {\n        // Notun parameter 'modestbranding=1' jog kora hoyeche\n        embedUrl = `https://www.youtube.com/embed/${videoId}?autoplay=0&rel=0&modestbranding=1`;\n      }\n    } catch (e) {\n      console.error(\"Failed to parse YouTube URL:\", e);\n    }\n  } else if (type === 'drive') {\n    if (videoUrl.includes('/preview') || videoUrl.includes('/embed')) {\n      embedUrl = videoUrl;\n    }\n  }\n  if (!embedUrl) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full h-full bg-black flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-400 text-xs p-2\",\n        children: \"Could not generate embed link. Check URL format.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"iframe\", {\n    className: \"w-full h-full\",\n    src: embedUrl,\n    title: title || 'Embedded Video',\n    frameBorder: \"0\",\n    allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n    allowFullScreen: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_c = VideoEmbed;\nexport default VideoEmbed;\nvar _c;\n$RefreshReg$(_c, \"VideoEmbed\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","VideoEmbed","item","videoUrl","type","title","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","embedUrl","videoId","split","e","console","error","src","frameBorder","allow","allowFullScreen","_c","$RefreshReg$"],"sources":["D:/Projects/my-portfolio/src/components/VideoEmbed.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst VideoEmbed = ({ item }) => {\r\n    const { videoUrl, type, title } = item || {};\r\n\r\n    if (!videoUrl || !videoUrl.includes('https://')) {\r\n        return (\r\n            <div className=\"w-full h-full bg-black flex items-center justify-center\">\r\n                <p className=\"text-red-400 text-xs p-2\">Video URL error.</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    let embedUrl = '';\r\n\r\n    if (type === 'youtube') {\r\n        let videoId = '';\r\n        try {\r\n            if (videoUrl.includes('youtu.be/')) {\r\n                videoId = videoUrl.split('youtu.be/')[1].split('?')[0];\r\n            } else if (videoUrl.includes('watch?v=')) {\r\n                videoId = videoUrl.split('watch?v=')[1].split('&')[0];\r\n            }\r\n            if (videoId) {\r\n                // Notun parameter 'modestbranding=1' jog kora hoyeche\r\n                embedUrl = `https://www.youtube.com/embed/${videoId}?autoplay=0&rel=0&modestbranding=1`;\r\n            }\r\n        } catch (e) {\r\n            console.error(\"Failed to parse YouTube URL:\", e);\r\n        }\r\n    } else if (type === 'drive') {\r\n        if (videoUrl.includes('/preview') || videoUrl.includes('/embed')) {\r\n            embedUrl = videoUrl;\r\n        }\r\n    }\r\n\r\n    if (!embedUrl) {\r\n        return (\r\n            <div className=\"w-full h-full bg-black flex items-center justify-center\">\r\n                <p className=\"text-red-400 text-xs p-2\">Could not generate embed link. Check URL format.</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <iframe\r\n            className=\"w-full h-full\"\r\n            src={embedUrl}\r\n            title={title || 'Embedded Video'}\r\n            frameBorder=\"0\"\r\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowFullScreen\r\n        ></iframe>\r\n    );\r\n};\r\n\r\nexport default VideoEmbed;\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC7B,MAAM;IAAEC,QAAQ;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGH,IAAI,IAAI,CAAC,CAAC;EAE5C,IAAI,CAACC,QAAQ,IAAI,CAACA,QAAQ,CAACG,QAAQ,CAAC,UAAU,CAAC,EAAE;IAC7C,oBACIN,OAAA;MAAKO,SAAS,EAAC,yDAAyD;MAAAC,QAAA,eACpER,OAAA;QAAGO,SAAS,EAAC,0BAA0B;QAAAC,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC;EAEd;EAEA,IAAIC,QAAQ,GAAG,EAAE;EAEjB,IAAIT,IAAI,KAAK,SAAS,EAAE;IACpB,IAAIU,OAAO,GAAG,EAAE;IAChB,IAAI;MACA,IAAIX,QAAQ,CAACG,QAAQ,CAAC,WAAW,CAAC,EAAE;QAChCQ,OAAO,GAAGX,QAAQ,CAACY,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC1D,CAAC,MAAM,IAAIZ,QAAQ,CAACG,QAAQ,CAAC,UAAU,CAAC,EAAE;QACtCQ,OAAO,GAAGX,QAAQ,CAACY,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACzD;MACA,IAAID,OAAO,EAAE;QACT;QACAD,QAAQ,GAAG,iCAAiCC,OAAO,oCAAoC;MAC3F;IACJ,CAAC,CAAC,OAAOE,CAAC,EAAE;MACRC,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEF,CAAC,CAAC;IACpD;EACJ,CAAC,MAAM,IAAIZ,IAAI,KAAK,OAAO,EAAE;IACzB,IAAID,QAAQ,CAACG,QAAQ,CAAC,UAAU,CAAC,IAAIH,QAAQ,CAACG,QAAQ,CAAC,QAAQ,CAAC,EAAE;MAC9DO,QAAQ,GAAGV,QAAQ;IACvB;EACJ;EAEA,IAAI,CAACU,QAAQ,EAAE;IACX,oBACIb,OAAA;MAAKO,SAAS,EAAC,yDAAyD;MAAAC,QAAA,eACpER,OAAA;QAAGO,SAAS,EAAC,0BAA0B;QAAAC,QAAA,EAAC;MAAgD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3F,CAAC;EAEd;EAEA,oBACIZ,OAAA;IACIO,SAAS,EAAC,eAAe;IACzBY,GAAG,EAAEN,QAAS;IACdR,KAAK,EAAEA,KAAK,IAAI,gBAAiB;IACjCe,WAAW,EAAC,GAAG;IACfC,KAAK,EAAC,0FAA0F;IAChGC,eAAe;EAAA;IAAAb,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAElB,CAAC;AAACW,EAAA,GApDItB,UAAU;AAsDhB,eAAeA,UAAU;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}