{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInAnonymously, signInWithCustomToken, onAuthStateChanged, signInWithEmailAndPassword, signOut } from \"firebase/auth\";\nimport { getFirestore, doc, setDoc, deleteDoc, onSnapshot, collection, query, addDoc, serverTimestamp } from \"firebase/firestore\";\n\n// --- START Local Development Configuration ---\nconst LOCAL_DEV_FIREBASE_CONFIG = {\n  apiKey: \"AIzaSyBS2NC2rkH6stMH4DEUdT105yUNKqTTRss\",\n  authDomain: \"first-project-a3e5c.firebaseapp.com\",\n  projectId: \"first-project-a3e5c\",\n  storageBucket: \"first-project-a3e5c.appspot.com\",\n  messagingSenderId: \"40010184893\",\n  appId: \"1:40010184893:web:ab151405bcb065b8badfd4\",\n  measurementId: \"G-2PWV3BQ0C0\"\n};\n// --- END Local Development Configuration ---\n\nconst firebaseConfig = typeof __firebase_config !== 'undefined' ? JSON.parse(__firebase_config) : LOCAL_DEV_FIREBASE_CONFIG;\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\nconst auth = getAuth(app);\nconst IS_ADMIN_USER = typeof __is_admin_user !== 'undefined' ? __is_admin_user : false;\n\n// --- Authentication Functions ---\n\nexport const signInUser = async () => {\n  try {\n    if (!auth.currentUser) {\n      const authToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\n      if (authToken) {\n        await signInWithCustomToken(auth, authToken);\n      } else {\n        await signInAnonymously(auth);\n      }\n    }\n  } catch (error) {\n    console.error(\"Error signing in to Firebase:\", error);\n  }\n};\nexport const signInWithEmail = async (email, password) => {\n  return signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => {\n  try {\n    await signOut(auth);\n    await signInAnonymously(auth);\n  } catch (error) {\n    console.error(\"Error signing out:\", error);\n  }\n};\n\n// --- Firestore Functions ---\n\nconst appId = typeof __app_id !== 'undefined' ? __app_id : 'local-dev-app-id';\nconst portfolioCollectionRef = collection(db, 'artifacts', appId, 'public', 'data', 'portfolio_items');\nconst sectionsCollectionRef = collection(db, 'artifacts', appId, 'public', 'data', 'sections'); // Notun Section collection\n\n// Portfolio Items\nexport const getPortfolioQuery = () => {\n  return query(portfolioCollectionRef);\n};\nexport const savePortfolioItem = async itemData => {\n  try {\n    const docRef = itemData.id ? doc(portfolioCollectionRef, itemData.id) : doc(portfolioCollectionRef);\n    const dataToSave = {\n      ...itemData,\n      updatedAt: serverTimestamp()\n    };\n    if (!itemData.id) {\n      dataToSave.createdAt = serverTimestamp();\n    }\n    await setDoc(docRef, dataToSave, {\n      merge: true\n    });\n  } catch (error) {\n    console.error(\"Error saving portfolio item:\", error);\n    throw error;\n  }\n};\nexport const deletePortfolioItem = async itemId => {\n  try {\n    await deleteDoc(doc(portfolioCollectionRef, itemId));\n  } catch (error) {\n    console.error(\"Error deleting portfolio item:\", error);\n    throw error;\n  }\n};\n\n// Sections - Notun functions\nexport const getSectionsQuery = () => {\n  return query(sectionsCollectionRef);\n};\nexport const saveSection = async sectionName => {\n  try {\n    await addDoc(sectionsCollectionRef, {\n      name: sectionName,\n      createdAt: serverTimestamp()\n    });\n  } catch (error) {\n    console.error(\"Error saving section:\", error);\n    throw error;\n  }\n};\n\n// Export necessary Firebase services and functions\nexport { auth, db, onAuthStateChanged, onSnapshot, collection, query, doc, IS_ADMIN_USER, serverTimestamp };","map":{"version":3,"names":["initializeApp","getAuth","signInAnonymously","signInWithCustomToken","onAuthStateChanged","signInWithEmailAndPassword","signOut","getFirestore","doc","setDoc","deleteDoc","onSnapshot","collection","query","addDoc","serverTimestamp","LOCAL_DEV_FIREBASE_CONFIG","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseConfig","__firebase_config","JSON","parse","app","db","auth","IS_ADMIN_USER","__is_admin_user","signInUser","currentUser","authToken","__initial_auth_token","error","console","signInWithEmail","email","password","signOutUser","__app_id","portfolioCollectionRef","sectionsCollectionRef","getPortfolioQuery","savePortfolioItem","itemData","docRef","id","dataToSave","updatedAt","createdAt","merge","deletePortfolioItem","itemId","getSectionsQuery","saveSection","sectionName","name"],"sources":["D:/Projects/my-portfolio/src/firebase/utils.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { \r\n    getAuth, \r\n    signInAnonymously, \r\n    signInWithCustomToken, \r\n    onAuthStateChanged,\r\n    signInWithEmailAndPassword,\r\n    signOut\r\n} from \"firebase/auth\";\r\nimport { \r\n    getFirestore, \r\n    doc, \r\n    setDoc, \r\n    deleteDoc, \r\n    onSnapshot, \r\n    collection, \r\n    query,\r\n    addDoc,\r\n    serverTimestamp\r\n} from \"firebase/firestore\";\r\n\r\n// --- START Local Development Configuration ---\r\nconst LOCAL_DEV_FIREBASE_CONFIG = {\r\n  apiKey: \"AIzaSyBS2NC2rkH6stMH4DEUdT105yUNKqTTRss\",\r\n  authDomain: \"first-project-a3e5c.firebaseapp.com\",\r\n  projectId: \"first-project-a3e5c\",\r\n  storageBucket: \"first-project-a3e5c.appspot.com\",\r\n  messagingSenderId: \"40010184893\",\r\n  appId: \"1:40010184893:web:ab151405bcb065b8badfd4\",\r\n  measurementId: \"G-2PWV3BQ0C0\"\r\n};\r\n// --- END Local Development Configuration ---\r\n\r\n\r\nconst firebaseConfig = typeof __firebase_config !== 'undefined' \r\n    ? JSON.parse(__firebase_config) \r\n    : LOCAL_DEV_FIREBASE_CONFIG;\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\nconst auth = getAuth(app);\r\n\r\nconst IS_ADMIN_USER = typeof __is_admin_user !== 'undefined' ? __is_admin_user : false;\r\n\r\n// --- Authentication Functions ---\r\n\r\nexport const signInUser = async () => {\r\n    try {\r\n        if (!auth.currentUser) {\r\n            const authToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\r\n            if (authToken) {\r\n                await signInWithCustomToken(auth, authToken);\r\n            } else {\r\n                await signInAnonymously(auth);\r\n            }\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Error signing in to Firebase:\", error);\r\n    }\r\n};\r\n\r\nexport const signInWithEmail = async (email, password) => {\r\n    return signInWithEmailAndPassword(auth, email, password);\r\n};\r\n\r\nexport const signOutUser = async () => {\r\n    try {\r\n        await signOut(auth);\r\n        await signInAnonymously(auth); \r\n    } catch (error)\r\n        {\r\n        console.error(\"Error signing out:\", error);\r\n    }\r\n};\r\n\r\n// --- Firestore Functions ---\r\n\r\nconst appId = typeof __app_id !== 'undefined' ? __app_id : 'local-dev-app-id';\r\nconst portfolioCollectionRef = collection(db, 'artifacts', appId, 'public', 'data', 'portfolio_items');\r\nconst sectionsCollectionRef = collection(db, 'artifacts', appId, 'public', 'data', 'sections'); // Notun Section collection\r\n\r\n// Portfolio Items\r\nexport const getPortfolioQuery = () => {\r\n    return query(portfolioCollectionRef);\r\n};\r\n\r\nexport const savePortfolioItem = async (itemData) => {\r\n    try {\r\n        const docRef = itemData.id \r\n            ? doc(portfolioCollectionRef, itemData.id)\r\n            : doc(portfolioCollectionRef);\r\n        \r\n        const dataToSave = { ...itemData, updatedAt: serverTimestamp() };\r\n        if (!itemData.id) {\r\n            dataToSave.createdAt = serverTimestamp();\r\n        }\r\n\r\n        await setDoc(docRef, dataToSave, { merge: true });\r\n    } catch (error) {\r\n        console.error(\"Error saving portfolio item:\", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const deletePortfolioItem = async (itemId) => {\r\n    try {\r\n        await deleteDoc(doc(portfolioCollectionRef, itemId));\r\n    } catch (error) {\r\n        console.error(\"Error deleting portfolio item:\", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Sections - Notun functions\r\nexport const getSectionsQuery = () => {\r\n    return query(sectionsCollectionRef);\r\n};\r\n\r\nexport const saveSection = async (sectionName) => {\r\n    try {\r\n        await addDoc(sectionsCollectionRef, { \r\n            name: sectionName,\r\n            createdAt: serverTimestamp()\r\n        });\r\n    } catch (error) {\r\n        console.error(\"Error saving section:\", error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n\r\n// Export necessary Firebase services and functions\r\nexport { \r\n    auth, \r\n    db, \r\n    onAuthStateChanged, \r\n    onSnapshot,\r\n    collection,\r\n    query,\r\n    doc,\r\n    IS_ADMIN_USER,\r\n    serverTimestamp,\r\n};\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}